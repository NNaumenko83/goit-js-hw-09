{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBb,EAAAe,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAW,CAC5DI,QAAO,KACT,IAEHC,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBb,EAAAe,OAAOI,QAAQ,sBAAoBP,QAAeC,MAAU,G,CAOrDO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAIC,EAAYC,OAAOjB,EAAMkB,OAC7B,MAAMC,EAAYF,OAAOJ,EAAKK,OAE9B,IAAK,IAAIE,EAAI,EAAGA,GAAKN,EAAOI,MAAOE,GAAK,EACtCC,QAAQC,IAAIF,GACF,IAANA,IACFJ,GAAaG,GAEf9B,EAAc+B,EAAGJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`),\n        {\n          timeout: 5000,\n        };\n    });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let delayTime = Number(delay.value);\n  const delayStep = Number(step.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    console.log(i);\n    if (i !== 1) {\n      delayTime += delayStep;\n    }\n    createPromise(i, delayTime);\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notify","success","timeout","catch","failure","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","delayTime","Number","value","delayStep","i","console","log"],"version":3,"file":"03-promises.db1ac8f2.js.map"}